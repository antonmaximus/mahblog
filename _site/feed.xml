<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>anton</title>
    <description>A small growth today makes progression happen...</description>
    <link>www.anton23.com/</link>
    <atom:link href="www.anton23.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 04 Nov 2014 18:27:38 -0800</pubDate>
    <lastBuildDate>Tue, 04 Nov 2014 18:27:38 -0800</lastBuildDate>
    <generator>Jekyll v2.1.0</generator>
    
      <item>
        <title>Anatomy of Backbone A2</title>
        <description>&lt;h2 id=&quot;collections&quot;&gt;5. Collections&lt;/h2&gt;

&lt;p&gt;Set of Models&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoList = Backbone.Collection.extend({
  model: TodoItem
});
var todoList = new TodoList();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add/remove/get&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoList.length; //# of models
todoList.add(todoItem1); // add model instance
todoList.at(0); //get model instance at index 0
todoList.get(1); // get by id
todoList.remove(todoItem1); //remove model instance
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bulk Population&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var todos = [
  {description: &#39;Pick up milk.&#39;, status: &#39;incomplete&#39;},
  {description: &#39;Get a car wash&#39;, status: &#39;incomplete&#39;},
  {description: &#39;Learn Backbone&#39;, status: &#39;incomplete&#39;}
];
todoList.reset(todos);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;fetching-data-from-the-server&quot;&gt;Fetching Data from the Server&lt;/h3&gt;

&lt;p&gt;URL to get JSON data from&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoList = Backbone.Collection.extend({
  url: &#39;/todos&#39;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Populate collection from server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoList.fetch();  // =&amp;gt; GET /todos
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;collections-can-have-events&quot;&gt;Collections can have Events&lt;/h3&gt;

&lt;p&gt;To listen for an event on a collection, and run an event: (works just like models)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoListon(&#39;event-name&#39;, function(){
  alert(&#39;event-name happened!&#39;);
});
todoList.trigger(&#39;event-name&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;special-events&quot;&gt;Special Events&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;//Listen for events
todoList.on(&#39;reset&#39;, doThing);  

// Event Triggered on reset and fetch
todoList.fetch();
todoList.reset();

// Event triggered without notification
todoList.fetch({silent: true});
todoList.reset({silent: true});

// Remove event listener
todoList.off(&#39;reset&#39;, doThing);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoList.on(&amp;lt;event&amp;gt;, &amp;lt;function&amp;gt;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Built-in Events. &lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;&lt;td&gt;add&lt;/td&gt;&lt;td&gt;When a model is added&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;removed&lt;/td&gt;&lt;td&gt;When a model is removed&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;reset&lt;/td&gt;&lt;td&gt;When reset or fetched&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Models in collection.  Events triggered on a model in a collection will also be triggered on the collection.&lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;&lt;td&gt;change&lt;/td&gt;&lt;td&gt;When an attribute is modified&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;change:&amp;lt;attr&amp;gt;&lt;/td&gt;&lt;td&gt;When &amp;lt;attr&amp;gt; is modified&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;destroy&lt;/td&gt;&lt;td&gt;When a model is destroyed&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;sync&lt;/td&gt;&lt;td&gt;Whenever successfully synced&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;error&lt;/td&gt;&lt;td&gt;When model save or validation fails&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;all&lt;/td&gt;&lt;td&gt;Any triggered event&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;iteration&quot;&gt;Iteration&lt;/h3&gt;

&lt;p&gt;Example collection&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoList.reset([
  {description: &#39;Pick up milk.&#39;, status: &#39;incomplete&#39;, id: 1},
  {description: &#39;Get a car wash.&#39;, status: &#39;complete&#39;, id: 2}
]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Alert each model’s description&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoList.forEach(function(todoItem){
  alert(todoItem.get(&#39;description&#39;));
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build an array of description&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoList.map(function(todoItem){
  return todoItem.get(&#39;description&#39;);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Filter models of some criteria&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoList.filter(function(todoItem){
  return todoItem.get(&#39;status&#39;) === &quot;incomplete&quot;;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Other Iteration Functions&lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;&lt;td&gt;forEach&lt;/td&gt;&lt;td&gt;reduce&lt;/td&gt;&lt;td&gt;reduceRight&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;find&lt;/td&gt;&lt;td&gt;filter&lt;/td&gt;&lt;td&gt;reject&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;every&lt;/td&gt;&lt;td&gt;all&lt;/td&gt;&lt;td&gt;some&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;include&lt;/td&gt;&lt;td&gt;invoke&lt;/td&gt;&lt;td&gt;max&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;min&lt;/td&gt;&lt;td&gt;sortBy&lt;/td&gt;&lt;td&gt;groupBy&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;sortedIndex&lt;/td&gt;&lt;td&gt;shuffle&lt;/td&gt;&lt;td&gt;toArray&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;size&lt;/td&gt;&lt;td&gt;first&lt;/td&gt;&lt;td&gt;initial&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;rest&lt;/td&gt;&lt;td&gt;last&lt;/td&gt;&lt;td&gt;without&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;indexOf&lt;/td&gt;&lt;td&gt;lastIndexOf&lt;/td&gt;&lt;td&gt;isEmpty&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;chain&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&quot;http://documentcloud.github.io/backbone/#Collection-Underscore-Methods&quot;&gt;Link to Functions&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;collections--views&quot;&gt;6. Collections &amp;amp; Views&lt;/h2&gt;

&lt;p&gt;Collection + View == Collection View!&lt;/p&gt;

&lt;p&gt;Review our Model View&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({
  render: function(){
    this.$el.html(this.template(this.model.toJSON()));
    return this;
  }
... });
var todoItem = new TodoItem();
var todoView = new TodoView({model: todoItem});
console.log(todoView.render().el);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;define-and-render&quot;&gt;Define and Render&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;var TodoListView = Backbone.View.extend({});
var todoListView = new TodoListView({collection: todoList});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First Crack at Render&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;render: function(){
  this.collection.forEach(function(todoItem){
    var todoView = new TodoView({model: todoItem});
    this.$el.append(todoView.render().el);  // !!! `this` changes context in forEach
}); }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use addOne (2nd Crack at Render)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;render: function(){ this.collection.forEach(this.addOne, this);  // !!! 2nd param saves context
}
addOne: function(todoItem){
  var todoView = new TodoView({model: todoItem});
  this.$el.append(todoView.render().el);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To finish off…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var todoListView = new TodoListView({collection: todoList});
todoListView.render();
console.log(todoListView.el);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;adding-new-models&quot;&gt;Adding new Models&lt;/h3&gt;

&lt;p&gt;Since this is a collection, you must listen to the &lt;code&gt;add&lt;/code&gt; event in the initalize function&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoListView = Backbone.View.extend({
  initialize: function(){
    this.collection.on(&#39;add&#39;, this.addOne, this);
},
  addOne: function(todoItem){
    var todoView = new TodoView({model: todoItem});
    this.$el.append(todoView.render().el);
  },
  render: function(){
    this.collection.forEach(this.addOne, this);
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- tsk --&gt;
&lt;pre&gt;&lt;code&gt;var newTodoItem = new TodoItem({
  description: &#39;Take out trash.&#39;,
  status: &#39;incomplete&#39;
});
todoList.add(newTodoItem);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;reset-event&quot;&gt;Reset Event&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;var TodoListView = Backbone.View.extend({
  initialize: function(){
    this.collection.on(&#39;add&#39;, this.addOne, this);
    this.collection.on(&#39;reset&#39;, this.addAll, this);
  },
  addOne: function(todoItem){
    var todoView = new TodoView({model: todoItem});
    this.$el.append(todoView.render().el);
  },
  addAll: function(){
    this.collection.forEach(this.addOne, this);
￼  },
  render: function(){
    this.addAll();
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- tsk --&gt;
&lt;pre&gt;&lt;code&gt;var todoList = new TodoList();
var todoListView = new TodoListView({
  collection: todoList
});
todoList.fetch();
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;fixing-remove-with-custom-events&quot;&gt;Fixing remove with custom events&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;todoList.remove(todoItem);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TodoList Collection&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;initialize: function(){
  this.on(&#39;remove&#39;, this.hideModel);
},
hideModel: function(model){
  model.trigger(&#39;hide&#39;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TodoItem View&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;initialize: function(){
  this.model.on(&#39;hide&#39;, this.remove, this);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;router--history&quot;&gt;7. Router &amp;amp; History&lt;/h2&gt;

&lt;h3 id=&quot;the-router&quot;&gt;The Router&lt;/h3&gt;

&lt;p&gt;Routers map URLs to actions&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Index Action
var router = new Backbone.Router({
  routes: { &quot;todos&quot;: &#39;index&#39; },
  index: function(){
    ...
} });

// OR Show Action
var router = new Backbone.Router({
  routes: { &quot;todos/:id&quot;: &#39;show&#39; }
  show: function(id){ ... }
})
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;triggering-routes&quot;&gt;Triggering Routes&lt;/h3&gt;

&lt;p&gt;router.navigate(“todos/1”, {
    trigger: true
  });&lt;/p&gt;

&lt;p&gt;Backbone History&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Backbone.history.start({pushState: true});  // !!! pushState on!
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- tsk --&gt;
&lt;pre&gt;&lt;code&gt;router.navigate(&quot;todos/1&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;show-action&quot;&gt;Show Action&lt;/h3&gt;

&lt;p&gt;Define Router Class&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoRouter = Backbone.Router.extend({
  routes: { &quot;todos/:id&quot;: &quot;show&quot; },
  show: function(id){
    this.todoList.focusOnTodoItem(id);
  },
  initialize: function(options){
    this.todoList = options.todoList;
  } 
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instantiate router instance&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var todoList = new TodoList();
var TodoApp = new TodoRouter({todoList: todoList});
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;index-action&quot;&gt;Index Action&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;var TodoRouter = Backbone.Router.extend({ routes: { &quot;&quot;: &quot;index&quot;,
            &quot;todos/:id&quot;: &quot;show&quot; },
  index: function(){
    this.todoList.fetch();
},
  show: function(id){
    this.todoList.focusOnTodoItem(id);
},
  initialize: function(options){
    this.todoList = options.todoList;
} });
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;app-organization&quot;&gt;App Organization&lt;/h3&gt;

&lt;p&gt;Since there’s only one router&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoApp = new (Backbone.Router.extend({
  routes: { &quot;&quot;: &quot;index&quot;, &quot;todos/:id&quot;: &quot;show&quot; },
  initialize: function(){
    this.todoList = new TodoList();
    this.todosView = new TodoListView({collection: this.todoList});
    $(&#39;#app&#39;).append(this.todosView.el);
  },
  start: function(){
    Backbone.history.start({pushState: true});
  },
  index: function(){
    this.todoList.fetch();
  },
  show: function(id){
    this.todoList.focusOnTodoItem(id);
  }
}));
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- tsk --&gt;
&lt;pre&gt;&lt;code&gt;$(function(){ TodoApp.start() });
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

</description>
        <pubDate>Tue, 04 Nov 2014 06:00:01 -0800</pubDate>
        <link>www.anton23.com/craft/2014/11/04/backbone-anatomy-a2/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/11/04/backbone-anatomy-a2/</guid>
        
        
        <category>craft</category>
        
      </item>
    
      <item>
        <title>Anatomy of Backbone A1</title>
        <description>&lt;h2 id=&quot;models&quot;&gt;2. Models&lt;/h2&gt;

&lt;p&gt;Generating a model class and a model instance:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoItem = Backbone.Model.extend({});￼
var todoItem = new TodoItem(
  { description: &#39;Pick up milk&#39;, status: &#39;incomplete&#39;, id: 1 }
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To get, set, and save an attribute&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoItem.get(&#39;description&#39;); 
todoItem.set({status: &#39;complete&#39;}); 
todoItem.save();
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;fetching-data-from-the-server&quot;&gt;Fetching Data from The Server&lt;/h3&gt;

&lt;p&gt;URL to get JSON data for model. RESTful web service flavor.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoItem = Backbone.Model.extend({urlRoot: &#39;/todos&#39; });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To populate model from server.  Fetch todo with id=1.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var todoItem = new TodoItem({id: 1})
todoItem.fetch();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Destroying a todo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoItem.get(&#39;id&#39;);
todoItem.destroy();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Creating Default Values&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoItem = Backbone.Model.extend({
  defaults: {
    description: &#39;Empty todo...&#39;,
    status: &#39;incomplete&#39;
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;models-can-have-events&quot;&gt;Models can have Events&lt;/h3&gt;

&lt;p&gt;To listen for an event on a model, and run the event:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoItem.on(&#39;event-name&#39;, function() {
  alert(&#39;event-name happened!&#39;);
});
todoItem.trigger(&#39;event-name&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;special-events&quot;&gt;Special Events&lt;/h3&gt;

&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoItem.on(&amp;lt;event&amp;gt;, &amp;lt;method&amp;gt;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To listen for changes,  to see how it’s triggered on change, to set without triggering, and to remove listener:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;todoItem.on(&#39;change&#39;, doThing);
todoItem.set({description: &#39;Fill prescription.&#39;});
todoItem.set({description: &#39;Fill prescription.&#39;}, {silent: true});
todoItem.off(&#39;change&#39;, doThing);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Built-in Events&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;&lt;td&gt;change&lt;/td&gt;&lt;td&gt;When an attribute is modified&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;change:&amp;lt;attr&amp;gt;&lt;/td&gt;&lt;td&gt;When &amp;lt;attr&amp;gt; is modified&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;destroy&lt;/td&gt;&lt;td&gt;When a model is destroyed&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;sync&lt;/td&gt;&lt;td&gt;Whenever successfully synced&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;error&lt;/td&gt;&lt;td&gt;When model save or validation fails&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;all&lt;/td&gt;&lt;td&gt;Any triggered event&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&quot;views&quot;&gt;3. Views&lt;/h2&gt;

&lt;p&gt;Create a view class and a view instance&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({});￼ ￼   var todoView = new TodoView({ model: todoItem });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rendering the view.  Every view has a top level &lt;code&gt;el&lt;/code&gt; (element) where &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; is the default tag.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({
  render: function(){
    var html = &#39;&amp;lt;h3&amp;gt;&#39; + this.model.get(&#39;description&#39;) + &#39;&amp;lt;/h3&amp;gt;&#39;;
    todoView.$el.html(html);  // todoView.$el.html(html) works too, but slower.
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use a different tag:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var SimpleView = Backbone.View.extend({tagName: &#39;li&#39;});
var simpleView = new SimpleView();
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;using-a-template&quot;&gt;Using a Template&lt;/h3&gt;

&lt;p&gt;Underscore Library is part of Backbone&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({
  tagName: &#39;article&#39;,
  id: &#39;todo-view&#39;,
  className: &#39;todo&#39;,
  template: _.template(&#39;&amp;lt;h3&amp;gt;&amp;lt;%= description %&amp;gt;&amp;lt;/h3&amp;gt;&#39;),
￼} });


var todoView = new TodoView({ model: todoItem });
todoView.render();
console.log(todoView.el);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Other Templating Engines&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Underscore.js&lt;/li&gt;
  &lt;li&gt;Mustache.js&lt;/li&gt;
  &lt;li&gt;Haml-js&lt;/li&gt;
  &lt;li&gt;Edo&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;adding-view-events&quot;&gt;Adding View Events&lt;/h3&gt;

&lt;p&gt;Syntax&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&quot;&amp;lt;event&amp;gt; &amp;lt;selector&amp;gt;&quot;: &quot;&amp;lt;method&amp;gt;&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({
  events: {
    &quot;click h3&quot;: &quot;alertStatus&quot;
  },
  alertStatus: function(e){
    alert(&#39;Hey you clicked the h3!&#39;);
} });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Selector is scoped to the &lt;code&gt;el&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this.$el.delegate(&#39;h3&#39;, &#39;click&#39;, alertStatus);  //delegate is deprecated, but same idea
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Views can have many events on the &lt;code&gt;el&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var DocumentView = Backbone.View.extend({
  events: {
    &quot;dblclick&quot;                : &quot;open&quot;,
    &quot;click .icon.doc&quot;         : &quot;select&quot;,
    &quot;click .show_notes&quot;       : &quot;toggleNotes&quot;,
    &quot;click .title .lock&quot;      : &quot;editAccessLevel&quot;,
    &quot;mouseover .title .date&quot;  : &quot;showTooltip&quot;
  }, 
  ...

});
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;view-event-options&quot;&gt;View Event Options&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;var SampleView = Backbone.View.extend({
  events: {
    &quot;&amp;lt;event&amp;gt; &amp;lt;selector&amp;gt;&quot;: &quot;&amp;lt;method&amp;gt;&quot;
  },
... });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Events: &lt;/p&gt;

&lt;p&gt;change click dblclick focus focusin
focusout hover keydown keypress load
mousedown mouseenter mouseleave mousemove mouseout
mouseover mouseup ready resize scroll
select unload&lt;/p&gt;

&lt;h2 id=&quot;models-and-views&quot;&gt;4. Models and Views&lt;/h2&gt;

&lt;p&gt;Review of model &amp;amp; view&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({
  template: _.template(&#39;&amp;lt;h3&amp;gt;&amp;lt;%= description %&amp;gt;&amp;lt;/h3&amp;gt;&#39;),
  render: function(){
    this.$el.html(this.template(this.model.toJSON()));
} });


var todoView = new TodoView({ model: todoItem });
todoView.render();
console.log(todoView.el);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Adding a Checkbox (that can be updated on the UI)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({ 
  template: _.template(&#39;&amp;lt;h3&amp;gt;&#39; +
    &#39;&amp;lt;input type=checkbox &#39; +
    &#39;&amp;lt;% if(status === &quot;complete&quot;) print(&quot;checked&quot;) %&amp;gt;/&amp;gt;&#39; +
    &#39;&amp;lt;%= description %&amp;gt; &amp;lt;/h3&amp;gt;&#39;),

  render: function() {
    this.$el.html(this.template(this.model.toJSON()));
  }
} });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;View events update the Model (Update model on UI event, and Refactor to separate what’s for the Model)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({
  events: {
    &#39;change input&#39;: &#39;toggleStatus&#39;
  },
  toggleStatus: function(){
   this.model.toggleStatus();
  }
});

var TodoItem = Backbone.Model.extend({
  toggleStatus: function(){
    if(this.get(&#39;status&#39;) === &#39;incomplete&#39;){
      this.set({&#39;status&#39;: &#39;complete&#39;});
    }else{
      this.set({&#39;status&#39;: &#39;incomplete&#39;});
￼   } 
    this.save();  // Synch changes to the server
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Re-render the view (Model updates change the view)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({
  events: {
    &#39;change input&#39;: &#39;toggleStatus&#39;
  },
  initialize: function(){
    this.model.on(&#39;change&#39;, this.render, this);
  },
  toggleStatus: function(){
   this.model.toggleStatus();
  },
  render: function(){
    this.$el.html(this.template(this.model.toJSON()));
} });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why the 3rd argument (i.e., What is &lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;)?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/vM1T1jh.png&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;
&lt;img src=&quot;http://i.imgur.com/GpBENlX.png&quot; alt=&quot;&quot; title=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Remove View on model destroy&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var TodoView = Backbone.View.extend({
  initialize: function(){
    this.model.on(&#39;change&#39;, this.render, this);
    this.model.on(&#39;destroy&#39;, this.remove, this);
},
  render: function(){
   this.$el.html(this.template(this.model.toJSON()));
},
  remove: function(){
    this.$el.remove();
} });
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

</description>
        <pubDate>Tue, 04 Nov 2014 06:00:00 -0800</pubDate>
        <link>www.anton23.com/craft/2014/11/04/backbone-anatomy-a1/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/11/04/backbone-anatomy-a1/</guid>
        
        
        <category>craft</category>
        
      </item>
    
      <item>
        <title>Belle Beauty Salon</title>
        <description>&lt;h2 id=&quot;concept-art&quot;&gt;Concept Art&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://indulgence-hair-salon.com/&quot;&gt;Light background&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.toniguy.com/&quot;&gt;Dark background&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://blog.myesalon.com/wp-content/uploads/2014/04/homepagescreenshot1.png&quot;&gt;Lots of curves&lt;/a&gt; &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

</description>
        <pubDate>Fri, 24 Oct 2014 07:00:00 -0700</pubDate>
        <link>www.anton23.com/craft/2014/10/24/belle-salon/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/10/24/belle-salon/</guid>
        
        
        <category>craft</category>
        
      </item>
    
      <item>
        <title>Optimize Web Speed: Low Effort, Big Impact</title>
        <description>&lt;h2 id=&quot;pick-the-low-hanging-fruits-first-that-have-big-impact&quot;&gt;Pick the Low-hanging Fruits First (that have Big Impact)&lt;/h2&gt;

&lt;p&gt;I ran into “Doin Simple Stuff to Make Our Websites Faster.”  Below is the video and I’ve listed
the TL;DW.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Gzip.&lt;/strong&gt; Check &lt;a href=&quot;http://gzipwtf.com/&quot;&gt;http://gzipwtf.com/&lt;/a&gt; to see if your site’s assets was delivered with compression enabled.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cache Stuff.&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;The slowest thing a website can do is go ask for a file across the internet and wait for it to arrive.&lt;/li&gt;
      &lt;li&gt;The fasters HTTP request is the one not made.  &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Losslessly Optimize Images.&lt;/strong&gt;  Use tools to compress images.
    &lt;ul&gt;
      &lt;li&gt;Codekit&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://imageoptim.com/&quot;&gt;https://imageoptim.com/&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://pnggauntlet.com/&quot;&gt;http://pnggauntlet.com/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Combine CSS and JS files.&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;If you can, do sprites for images too.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figure&gt;&lt;iframe width=&quot;480&quot; height=&quot;360&quot; allowfullscreen=&quot;&quot; class=&quot;youtube-player&quot; src=&quot;//www.youtube.com/embed/IQKVtAMyiG0?wmode=transparent&amp;amp;amp;autoplay=0&amp;amp;amp;rel=0&amp;amp;amp;showinfo=0&amp;amp;amp;autohide=1&amp;amp;amp;color=white&amp;amp;amp;&quot; type=&quot;text/html&quot;&gt;&lt;/iframe&gt;
  &lt;figcaption&gt;2013 September Squatz (205x4)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;hr /&gt;

</description>
        <pubDate>Wed, 22 Oct 2014 07:44:59 -0700</pubDate>
        <link>www.anton23.com/craft/2014/10/22/optimize-web-speed/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/10/22/optimize-web-speed/</guid>
        
        
        <category>craft</category>
        
      </item>
    
      <item>
        <title>G Interviewing: What Worked and What Didn&#39;t</title>
        <description>&lt;h2 id=&quot;what-worked&quot;&gt;What Worked&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;You were excited – this made you alert and attentive.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-didnt&quot;&gt;What Didn’t&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;You were too excited like a kid – one who’s looking to add a person is looking to
solve issues and not take care of one.&lt;/li&gt;
  &lt;li&gt;You were not calm – the need to be composed and interested at the same time&lt;/li&gt;
  &lt;li&gt;You were not prepared – you went to the interview on a 24 hour notice and didn’t spend 
much time reading.&lt;/li&gt;
  &lt;li&gt;Your website didn’t showcase enough of you – add projects you’ve completed.&lt;/li&gt;
  &lt;li&gt;Being funny.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;always&quot;&gt;Always:&lt;/h2&gt;

&lt;h3 id=&quot;before&quot;&gt;Before&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Get Interview Itinerary – This should include:
    &lt;ul&gt;
      &lt;li&gt;People whom you’ll be talking to and their background.&lt;/li&gt;
      &lt;li&gt;Duration of each interview&lt;/li&gt;
      &lt;li&gt;Type of interview (e.g., technical, group, one-on-one)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Have questions ready&lt;/li&gt;
  &lt;li&gt;Preparation is key, so read up
    &lt;ul&gt;
      &lt;li&gt;Industry the team is in.&lt;/li&gt;
      &lt;li&gt;Key people.&lt;/li&gt;
      &lt;li&gt;The team’s previous products.&lt;/li&gt;
      &lt;li&gt;Be very wary of interviews with less than 2 days notice – not enought time to prepare&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;during&quot;&gt;During&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Be Grounded – &lt;em&gt;To me, being grounded means being fully present: physically, emotionally and energetically. It means your mind is not wandering or pulling your energy elsewhere. Your heart and soul are not searching somewhere in the past or looking into the future. (Take a deep breath … there, you’re grounded!)&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;Breathe and listen to yourself.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Be calm and composed  – You want the other party to be composed? You should start it.&lt;/li&gt;
  &lt;li&gt;Interact, Connect, and Improv – with anyone and everyone.
    &lt;ul&gt;
      &lt;li&gt;Ask your favorite question at each interview (even if it’s repetitive to you, each
person will have a different take on it).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Improv rule: Avoid being funny.  Humor comes naturally and we want clever lines.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;after&quot;&gt;After&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Expect that they’re also interviewing other people – This means you’re not that 
special.  And that even if you did really well to the best of your ability, they’d 
still go with someone who’s done it better than you did (so it may not be all you after all).&lt;/li&gt;
  &lt;li&gt;There will be a waiting game.  Don’t play it by focusing on more important items on your to-do list.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

</description>
        <pubDate>Wed, 22 Oct 2014 07:44:58 -0700</pubDate>
        <link>www.anton23.com/craft/2014/10/22/interview/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/10/22/interview/</guid>
        
        
        <category>craft</category>
        
      </item>
    
      <item>
        <title>JavaScript: Mail of Modularity</title>
        <description>&lt;h2 id=&quot;namespacing-basics&quot;&gt;Namespacing Basics&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The key to creating a namespace is a single global Object, commonly called the “wrapper” for the space.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now that the function and all the necessary variables are “encapsulated” within the namespace, we’ll need to call that namespace in order to access any of them.&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;var ARMORY = (function( war ){
  var weaponList = [ *list of weapon Objects* ]; 
  var armorList = [ *list of armor Objects* ]; 
  var removeWeapon = function(...){};
  var replaceWeapon = function(...){};
  var removeArmor = function(...){};
  var replaceArmor = function(...){};

    return {
      makeWeaponRequest: function(...){
        if(war) //let civilians have weaponry
       },
      makeArmorRequest: function(...){}
    };
})(wartime);
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

</description>
        <pubDate>Sat, 11 Oct 2014 07:44:58 -0700</pubDate>
        <link>www.anton23.com/craft/2014/10/11/javascript-mail-of-modularity/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/10/11/javascript-mail-of-modularity/</guid>
        
        
        <category>craft</category>
        
      </item>
    
      <item>
        <title>jQuery Plugin Development</title>
        <description>&lt;h3 id=&quot;head-first-into-plugin-development&quot;&gt;7.1 Head First Into Plugin Development&lt;/h3&gt;
&lt;p&gt;index.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;jQuery Plugins&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h1&amp;gt;My Tweets&amp;lt;/h1&amp;gt;
&amp;lt;div class=&quot;tweets&quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;searchTwitter.jquery.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
$(&#39;div.tweets&#39;).queryTwitter({
  search: &#39;your&#39;,
  limit: 10,
  // onComplete: function() {
  //  console.log(arguments);
  // },
  refresh: 4000,
  transition: &#39;slideToggle&#39;
});

&amp;lt;/script&amp;gt;



&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;searchTwitter.jquery.js&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Utility
if ( typeof Object.create !== &#39;function&#39; ) {
  Object.create = function( obj ) {
    function F() {};
    F.prototype = obj;
    return new F();
  };
}

(function( $, window, document, undefined ) {
  var Twitter = {
    init: function( options, elem ) {
      var self = this;

      self.elem = elem;
      self.$elem = $( elem );

      self.url = &#39;http://search.twitter.com/search.json&#39;;

      self.search = ( typeof options === &#39;string&#39; )
        ? options
        : options.search;

      self.options = $.extend( {}, $.fn.queryTwitter.options, options );

      self.refresh( 1 );
    },

    refresh: function( length ) {
      var self = this;

      setTimeout(function() {
        self.fetch().done(function( results ) {
          results = self.limit( results.results, self.options.limit );

          self.buildFrag( results );

          self.display();

          if ( typeof self.options.onComplete === &#39;function&#39; ) {
            self.options.onComplete.apply( self.elem, arguments );
          }

          if ( self.options.refresh ) {
            self.refresh();
          }
        });
      }, length || self.options.refresh );
    },

    fetch: function() {
      return $.ajax({
        url: this.url,
        data: { q: this.search },
        dataType: &#39;jsonp&#39;
      });
    },

    buildFrag: function( results ) {
      var self = this;

      self.tweets = $.map( results, function( obj, i) {
        return $( self.options.wrapEachWith ).append ( obj.text )[0];
      });
    },

    display: function() {
      var self = this;

      if ( self.options.transition === &#39;none&#39; || !self.options.transition ) {
        self.$elem.html( self.tweets ); // that&#39;s available??
      } else {
        self.$elem[ self.options.transition ]( 500, function() {
          $(this).html( self.tweets )[ self.options.transition ]( 500 );
        });
      }
    },

    limit: function( obj, count ) {
      return obj.slice( 0, count );
    }
  };

  $.fn.queryTwitter = function( options ) {
    return this.each(function() {
      var twitter = Object.create( Twitter );
      
      twitter.init( options, this );

      $.data( this, &#39;queryTwitter&#39;, twitter );
    });
  };

  $.fn.queryTwitter.options = {
    search: &#39;@tutspremium&#39;,
    wrapEachWith: &#39;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&#39;,
    limit: 10,
    refresh: null,
    onComplete: null,
    transition: &#39;fadeToggle&#39;
  };

})( jQuery, window, document );
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

</description>
        <pubDate>Fri, 10 Oct 2014 07:44:58 -0700</pubDate>
        <link>www.anton23.com/craft/2014/10/10/jquery-plugin-development/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/10/10/jquery-plugin-development/</guid>
        
        
        <category>craft</category>
        
      </item>
    
      <item>
        <title>jQuery AJAX</title>
        <description>&lt;h3 id=&quot;loading-pages-asynchronously&quot;&gt;6.1 Loading Pages Asynchronously&lt;/h3&gt;
&lt;p&gt;index.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;AJAX: load&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;nav&amp;gt;
  &amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;about.html&quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;contact.html&quot;&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;

&amp;lt;div class=&quot;wrap&quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;


&amp;lt;script&amp;gt;

(function() {
  var wrap = $(&#39;div.wrap&#39;);

  $(&#39;a&#39;).on(&#39;click&#39;, function( e ) {
    var href = $(this).attr(&#39;href&#39;);

    wrap.load( href + &#39; .container&#39; );

    e.preventDefault();
  }); 
})();

&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;about.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;AJAX: load&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;


&amp;lt;div class=&quot;container&quot;&amp;gt;
  &amp;lt;h2&amp;gt;About Me&amp;lt;/h2&amp;gt;
  &amp;lt;p&amp;gt;I work for Envato!&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;



&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;


&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;contact.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;AJAX: load&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;


&amp;lt;div class=&quot;container&quot;&amp;gt;
  &amp;lt;h2&amp;gt;Contact Me&amp;lt;/h2&amp;gt;
  &amp;lt;p&amp;gt;Represent contact form.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;



&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;


&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;interacting-with-the-server-side&quot;&gt;6.2 Interacting with the Server-Side&lt;/h3&gt;
&lt;p&gt;index.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;AJAX: POST&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h1&amp;gt;Something to Save&amp;lt;/h1&amp;gt;
&amp;lt;form action=&quot;#&quot;&amp;gt;
  &amp;lt;textarea name=&quot;content&quot; id=&quot;content&quot; cols=&quot;30&quot; rows=&quot;10&quot;&amp;gt;&amp;lt;/textarea&amp;gt;
  &amp;lt;p&amp;gt;&amp;lt;button type=&quot;submit&quot;&amp;gt;Save&amp;lt;/button&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/form&amp;gt;

&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;

  $.post( &#39;load.php&#39;, function(data) {
    if ( data ) {
      $(&#39;#content&#39;).val( data );
    }
  });


  // listen for click
  $(&#39;form&#39;).on(&#39;submit&#39;, function(e) {
    $.post( &#39;save.php&#39;, $(this).serialize(), function(response) {
      alert( response );
    });
    // disable default action
    e.preventDefault();
  });

  

  // grab textarea content

  // post content to script, and save
&amp;lt;/script&amp;gt;
  
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;save.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php

$f = fopen(&#39;data.txt&#39;, &#39;w&#39;);
fwrite( $f, $_POST[&#39;content&#39;]);
fclose($f);

echo &#39;Comment has been saved&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;load.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php

$data = file( &#39;data.txt&#39;);
echo stripslashes( $data[0] );
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;section&quot;&gt;6.3&lt;/h3&gt;
&lt;p&gt;index.html&lt;/p&gt;

&lt;h3 id=&quot;deferreds&quot;&gt;6.5 Deferreds&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;jQuery Deferreds&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;


&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;


&amp;lt;script&amp;gt;

function getTweets( search ) {
  return $.ajax({
    url: &#39;http://search.twitter.com/search.json&#39;,
    data: { q: search },
    dataType: &#39;jsonp&#39;
  });
}


$.when( getTweets(&#39;dogs&#39;), getTweets(&#39;cats&#39;) ).done(function(results1, results2) {
  console.log(results1);
  console.log(results2);
});

  
// $.searchTwitter = function( search ) {
//  return $.ajax({
//    url: &#39;http://search.twitter.com/search.json&#39;,
//    data: { q: search },
//    dataType: &#39;jsonp&#39;
//  }).promise();
// };

// var outer = $.searchTwitter(&#39;cats&#39;);

// outer.then(function  ( results ) {
//  console.log(results);
// });

// // ...

// outer.then(function(results) {
//  console.log(results);
// });



&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

</description>
        <pubDate>Thu, 09 Oct 2014 07:44:58 -0700</pubDate>
        <link>www.anton23.com/craft/2014/10/09/jquery-ajax/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/10/09/jquery-ajax/</guid>
        
        
        <category>craft</category>
        
      </item>
    
      <item>
        <title>jQuery Custom Events</title>
        <description>&lt;h3 id=&quot;custom-events-and-the-observer-pattern&quot;&gt;5.1 Custom Events and the Observer Pattern&lt;/h3&gt;
&lt;p&gt;index.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;Custom Events&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h1&amp;gt;Hi There&amp;lt;/h1&amp;gt;


&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;


&amp;lt;script&amp;gt;
  
// PubSub
(function( $ ) {
  var o = $( {} );

  $.each({
    trigger: &#39;publish&#39;,
    on: &#39;subscribe&#39;,
    off: &#39;unsubscribe&#39;
  }, function( key, val ) {
    jQuery[val] = function() {
      o[key].apply( o, arguments );
    };
  });
})( jQuery );


$.getJSON(&#39;http://search.twitter.com/search.json?q=dogs&amp;amp;callback=?&#39;, function( results) { 
  $.publish( &#39;twitter/results&#39;, results );
});

// ...
$.subscribe( &#39;twitter/results&#39;, function( e, results ) {
  $(&#39;body&#39;).html(
    $.map( results.results, function( obj, index) {
      return &#39;&amp;lt;li&amp;gt;&#39; + obj.text + &#39;&amp;lt;/li&amp;gt;&#39;;
    }).join(&#39;&#39;)
  );
});


&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tweets.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;Custom Events&amp;lt;/title&amp;gt;
  &amp;lt;style&amp;gt;
  body { width: 600px; margin: auto; font-family: sans-serif; text-align: center; }
  li { text-align: left; padding-bottom: 1em; }
  &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h2&amp;gt;What Are You Interested In?&amp;lt;/h2&amp;gt;

&amp;lt;form action=&quot;#&quot;&amp;gt;
  &amp;lt;p&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;q&quot; id=&quot;q&quot;&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/form&amp;gt;

&amp;lt;ul class=&quot;tweets&quot;&amp;gt;&amp;lt;/ul&amp;gt;


&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;


&amp;lt;script&amp;gt;

(function($) {
  var o = $( {} );

  $.each({
    on: &#39;subscribe&#39;,
    trigger: &#39;publish&#39;,
    off: &#39;unsubscribe&#39;
  }, function( key, api ) {
    $[api] = function() {
      o[key].apply( o, arguments );
    }
  });

})(jQuery);


(function($) {
    
  var Twitter = {
    init: function() {
      this.template = &#39;&amp;lt;li&amp;gt;{{tweet}}&amp;lt;/li&amp;gt;&#39;;
      this.query = &#39;@tutspremium&#39;;
      this.tweets = [];
      this.timer;

      this.cache();
      this.bindEvents();
      this.subscriptions();


      $.publish( &#39;twitter/query&#39; );
      this.searchInput.val( this.query );


      return this;
    },

    cache: function() { 
      this.container = $(&#39;ul.tweets&#39;);
      this.searchInput = $(&#39;#q&#39;);
    },

    bindEvents: function() {
      this.searchInput.on( &#39;keyup&#39;, this.search );
    },

    subscriptions: function() {
      $.subscribe( &#39;twitter/query&#39;, this.fetchJSON );
      $.subscribe( &#39;twitter/results&#39;, this.renderResults );
    },

    search: function() {
      var self = Twitter,
        input = this;

      clearTimeout( self.timer );

      self.timer = ( input.value.length &amp;gt;= 3 ) &amp;amp;&amp;amp; setTimeout(function() {
        self.query = input.value;
        $.publish( &#39;twitter/query&#39; );
      }, 400);
    },

    fetchJSON: function() {
      var url = &#39;http://search.twitter.com/search.json?callback=?&amp;amp;q=&#39;;

      return $.getJSON( url + Twitter.query, function( data ) {
        Twitter.tweets = data.results;
        $.publish( &#39;twitter/results&#39; );
      });
    },

    renderResults: function() {
      var self = Twitter,
        frag = [],
        tweet;

      self.container.html(
        $.map( self.tweets, function( obj, index ) {
          var t = 
            obj.text.replace(/(http:[^\s]+)/, &#39;&amp;lt;a href=&quot;$1&quot;&amp;gt;$1&amp;lt;/a&amp;gt;&#39;)
                .replace(/@([^\s:]+)/, &#39;&amp;lt;a href=&quot;http://twitter.com/$1&quot;&amp;gt;@$1&amp;lt;/a&amp;gt;&#39;);

          return self.template.replace(/{{tweet}}/, t);
        }).join(&#39;&#39;)
      );
    }
  };

  window.Twitter = Twitter.init();

})(jQuery);

&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

</description>
        <pubDate>Thu, 09 Oct 2014 07:43:58 -0700</pubDate>
        <link>www.anton23.com/craft/2014/10/09/jquery-custom-events/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/10/09/jquery-custom-events/</guid>
        
        
        <category>craft</category>
        
      </item>
    
      <item>
        <title>jQuery Utilities</title>
        <description>&lt;h3 id=&quot;each-and-templating&quot;&gt;4.1 $.each and Templating&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;Q&amp;amp;A&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;script id=blogTemplate type=tuts/template&amp;gt;
  &amp;lt;h2&amp;gt; {{title}} &amp;lt;/h2&amp;gt;
  &amp;lt;img src={{thumbnail}} alt={{title}}&amp;gt;
&amp;lt;/script&amp;gt;

&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;

(function() {
  var content = [
    {
      title: &#39;My awesome blog post&#39;,
      thumbnail: &#39;http://d2o0t5hpnwv4c1.cloudfront.net/1137_terminal/preview.png&#39;,
    },
    {
      title: &#39;My second awesome blog post&#39;,
      thumbnail: &#39;http://d2o0t5hpnwv4c1.cloudfront.net/1133_newrelic/200.jpg&#39;,
    },
    {
      title: &#39;My third blog post&#39;,
      thumbnail: &#39;http://d2o0t5hpnwv4c1.cloudfront.net/1137_terminal/preview.png&#39;,
    }
  ],
    template = $.trim( $(&#39;#blogTemplate&#39;).html() ),
    frag = &#39;&#39;;



  $.each( content, function( index, obj ) {
    frag +=
      template.replace( /{{title}}/ig, obj.title )
          .replace( /{{thumbnail}}/ig, obj.thumbnail );   
  });

  $(&#39;body&#39;).append(frag);

})();

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;say-hello-to-handlebars&quot;&gt;4.2 Say Hello to Handlebars&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;Mustache&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;
h2 span { color: gray; font-size: .8em; }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;ul class=&quot;tweets&quot;&amp;gt;
  &amp;lt;script id=&quot;template&quot; type=&quot;text/x-handlebars-template&quot;&amp;gt;
    {{#each this}}
    &amp;lt;li&amp;gt;
      &amp;lt;h2&amp;gt;{{fullName author}}&amp;lt;/h2&amp;gt;
      &amp;lt;p&amp;gt;{{{tweet}}}&amp;lt;/p&amp;gt;

      {{#if quote}}
        &amp;lt;h5&amp;gt;{{quote}}&amp;lt;/h5&amp;gt;
      {{else}}
        &amp;lt;h5&amp;gt;Author does not have a quote.&amp;lt;/h5&amp;gt;
      {{/if}}
    &amp;lt;/li&amp;gt;
    {{/each}}
  &amp;lt;/script&amp;gt;
&amp;lt;/ul&amp;gt;


&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script src=&quot;http://cloud.github.com/downloads/wycats/handlebars.js/handlebars-1.0.0.beta.6.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;

(function() {
  var context = [
    {
      author: { first: &#39;Jeffrey&#39;, last: &#39;Way&#39;, age: 27 },
      tweet: &#39;30 Days to Learn jQuery Rocks&#39;,
      quote: &#39;Never ever, ever, ever give up.&#39;
    },
    {
      author: { first: &#39;John&#39;, last: &#39;Doe&#39;, age: 45 },
      tweet: &#39;&amp;lt;strong&amp;gt;30 Days&amp;lt;/strong&amp;gt; to Learn jQuery Rocks&#39;,
    }
  ],
    template = Handlebars.compile( $(&#39;#template&#39;).html() );

  Handlebars.registerHelper(&#39;fullName&#39;, function( author ) {
    return author.first + &#39; &#39; + author.last + &#39; - &#39; + author.age;
  });

  $(&#39;ul.tweets&#39;).append( template(context) );

})();

&amp;lt;/script&amp;gt;


&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;the-twitter-api&quot;&gt;4.3 The Twitter API&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;Twitter&amp;lt;/title&amp;gt;
  &amp;lt;style&amp;gt;
  body { width: 600px; margin: auto; }
  ul { list-style: none; }
  li { padding-bottom: 1em; }
  img { float: left; padding-right: 1em; }
  a { text-decoration: none; color: #333; }
  &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;ul id=&quot;biebster-tweets&quot;&amp;gt;
  &amp;lt;script id=&quot;tweets-template&quot; type=&quot;text/x-handlebars-template&quot;&amp;gt;
    {{#each this}}
    &amp;lt;li&amp;gt;
      &amp;lt;img src=&quot;{{thumb}}&quot; alt=&quot;{{author}}&quot;&amp;gt;
      &amp;lt;p&amp;gt;&amp;lt;a href=&quot;{{url}}&quot;&amp;gt;{{tweet}}&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    {{/each}}
  &amp;lt;/script&amp;gt;   
&amp;lt;/ul&amp;gt;


&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script src=&quot;http://cloud.github.com/downloads/wycats/handlebars.js/handlebars-1.0.0.beta.6.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;

(function() {

  var Twitter = {
    init: function( config ) {
      this.url = &#39;http://search.twitter.com/search.json?q=&#39; + config.query + &#39;&amp;amp;callback=?&#39;;
      this.template = config.template;
      this.container = config.container;

      this.fetch();
    },

    attachTemplate: function() {
      var template = Handlebars.compile( this.template );

      this.container.append( template( this.tweets ) );

    },

    fetch: function() {
      var self = this;

      $.getJSON( this.url, function( data ) {
        self.tweets = $.map( data.results, function( tweet ) {
          return {
            author: tweet.from_user,
            tweet: tweet.text,
            thumb: tweet.profile_image_url,
            url: &#39;http://twitter.com/&#39; + tweet.from_user + &#39;/status/&#39; + tweet.id_str
          };
        });

        // For future lessons, research $.deferred, viewers. :)
        self.attachTemplate(); 
      });
    }
  };

  Twitter.init({
    template: $(&#39;#tweets-template&#39;).html(),
    container: $(&#39;#biebster-tweets&#39;),
    query: &#39;Justin Bieber&#39;
  });

})();

&amp;lt;/script&amp;gt;


&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;filtering-with-jquerygrep&quot;&gt;4.4 Filtering with jQuery.grep&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=utf-8&amp;gt;
  &amp;lt;title&amp;gt;$.grep&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;


&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script&amp;gt;
  (function() {
    
    var arr = [
      {
        first: &#39;Jeffrey&#39;,
        last: &#39;Way&#39;
      },
      {
        first: &#39;Allison&#39;,
        last: &#39;Way&#39;
      },
      {
        first: &#39;Jeffrey&#39;,
        last: &#39;Smith&#39;
      },
      {
        first: &#39;John&#39;,
        last: &#39;Doe&#39;
      },
      {
        first: &#39;Thomas&#39;,
        last: &#39;Way&#39;
      }
    ];

    arr = $.grep( arr, function( obj, index) {
      return obj.last === &#39;Way&#39;;
    });

    console.log(arr);

  })();
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt; {% raw %}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

</description>
        <pubDate>Wed, 08 Oct 2014 07:43:58 -0700</pubDate>
        <link>www.anton23.com/craft/2014/10/08/jquery-utilities/</link>
        <guid isPermaLink="true">www.anton23.com/craft/2014/10/08/jquery-utilities/</guid>
        
        
        <category>craft</category>
        
      </item>
    
  </channel>
</rss>
